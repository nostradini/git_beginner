name: Template Workflow
on:
  push:
    branches: [main]

env:
  ENV_TOKEN: ${{ secrets.DOOR }}
jobs:
  run_script:
    runs-on: ubuntu-latest
    outputs:
      COUNTER: Commit count
      LASTCOM: Last commit
      envgitmojiko: Change type
      envMajor: colMajor
      envMinor: colMinor
      envPatch: colPatch
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Run Checkpoints
      id: value
      run: |
        chmod +x ./script/initialize_checkpoints.sh
        ./script/initialize_checkpoints.sh
    
    - name: Check current version
      run: |
        ver_str=$(cat "VERSION")
        ver_extract_str="$(cut -d' ' -f2 <<< "$ver_str")"
        echo "Version string is $ver_extract_str"
        cur_major="$(cut -d'.' -f1 <<< "$ver_extract_str")"
        cur_minor="$(cut -d'.' -f2 <<< "$ver_extract_str")"
        cur_patch="$(cut -d'.' -f3 <<< "$ver_extract_str")"
        echo "curmajor=$cur_major" >> $GITHUB_ENV
        echo "curminor=$cur_minor" >> $GITHUB_ENV
        echo "curpatch=$cur_patch" >> $GITHUB_ENV
        echo "OLD= major=$cur_major, minor=$cur_minor, patch=$cur_patch"

    - name: Apply Logic
      id: logic
      run: |
        chmod +x ./script/do_logic.sh
        ./script/do_logic.sh $curmajor $curminor $curpatch

    - name: Release Tag
      # run: |
      #   chmod +x ./script/releaseNOTES.sh
      #   ./script/releaseNOTES.sh

    - name: TEST VALUE
      run: |
        echo "commit count= ${{ steps.value.outputs.COUNTER }}"
        echo "last commit= ${{ steps.value.outputs.LASTCOM }}"
        echo "envgitmojiko= ${{ steps.logic.outputs.envgitmojiko }}"
        echo "envMajor= ${{ steps.logic.outputs.envMajor }}"
        echo "envMinor= ${{ steps.logic.outputs.envMinor }}"
        echo "envPatch= ${{ steps.logic.outputs.envPatch }}"
     
    # - name: Dump GitHub context
    #   env:
    #       GITHUB_CONTEXT: ${{ toJson(github) }}
      # run: echo "$GITHUB_CONTEXT"
      
    - name: Delete tags
      run: |
        echo "message= " $message
        # git config --global user.email "github-actions[bot]@users.noreply.github.com"
        # git config --global user.name "github-actions[bot]"
        # git tag -l | xargs -n 1 git push --delete origin
        # git tag | xargs git tag -d
