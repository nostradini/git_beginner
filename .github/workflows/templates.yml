name: Template Workflow
on:
  push:
    branches: [main]

env:
  message: ${{ github.event.head_commit.message }}
  ENV_TOKEN: ${{ secrets.DOOR }}
jobs:
  run_script:
    runs-on: ubuntu-latest
    outputs:
      COUNTER:
      description: Get commits count
     steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Delete tags
      run: |
        echo "message= " $message
        # git config --global user.email "github-actions[bot]@users.noreply.github.com"
        # git config --global user.name "github-actions[bot]"
        # git tag -l | xargs -n 1 git push --delete origin
        # git tag | xargs git tag -d

    - name: RUN COUNTER
      id: value
      run: |
        chmod +x ./script/initialize_checkpoints.sh
        ./script/initialize_checkpoints.sh
    
    - name: TEST VALUE
      run: |
        echo "value= ${{ steps.value.outputs.COUNTER }}"

    - name: Work on logic
      id: setvar
      run: |
        # arrCom=()
        # while IFS= read -r line; do
        #   arrCom+=( "$line" )
        #   if [[ ${line:41:50} != "[JOB]"* ]]
        #   then
        #   lowerstr=$(echo ${line:41:50} |tr '[:upper:]' '[:lower:]')
        #   # echo "transformed to lower = $lowerstr"
        #   if [[ "$lowerstr" == *"#major"* ]]
        #   then
        #   echo "Found major in commit"
        #   echo "gitmojiko=:boom: Breaking Changes" >> $GITHUB_ENV
        #   ver_major=$((ver_major+1))
        #   ver_minor=0
        #   ver_patch=0
        #   elif [[ "$lowerstr" == *"#minor"* ]]
        #   then
        #   echo "Found minor in commit"
        #   echo "gitmojiko=:sparkles: New Features" >> $GITHUB_ENV
        #   ver_minor=$((ver_minor+1))
        #   ver_patch=0
        #   elif [[ "$lowerstr" == *"#patch"* ]]
        #   then
        #   echo "Found patch in commit"
        #   echo "gitmojiko=:bug: Bug Fixes" >> $GITHUB_ENV
        #   ver_patch=$((ver_patch+1))
        #   else
        #   echo "Default condition"
        #   echo "gitmojiko=:bug: Bug Fixes" >> $GITHUB_ENV
        #   ver_patch=$((ver_patch+1))
        #   fi
        #   data="$data $gitmojiko \n * ${line:0:7} - ${line:41:50} \n "
        #   fi
        #   cn=$((cn+1))
        #   echo "gitmojiko= ${{env.gitmojiko}}"
        # done < <( git log --after="$targetD" --format=oneline )
        # echo "ver_major=$ver_major,ver_minor=$ver_minor,ver_patch=$ver_patch"
        # echo "data= " $data
        
    - name: Release Notes
      run: |


        # chmod +x ./script/releaseNOTES.sh
        # ./script/releaseNOTES.sh


    # - name: Dump GitHub context
    #   env:
    #       GITHUB_CONTEXT: ${{ toJson(github) }}
      # run: echo "$GITHUB_CONTEXT"
      
